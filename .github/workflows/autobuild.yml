# This is a basic workflow to help you get started with Actions

name: Autobuild

# Controls when the action will run. Triggers the workflow on push
# events but only for the dev branch
on:
  push:
    branches: [ workflowtest ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # Want VS2017 so we use an old version
    runs-on: windows-2016

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - name: Install Conan
        run: pip install conan
        shell: bash

      - name: Run setup.sh
        run: yes n | ./setup.sh || if [[ $? -eq 141 ]]; then true; else exit $?; fi
        shell: bash
        
      - name: Run Conan install
        run: conan install ./FallingSandSurvival/conanfile.txt -g visual_studio --install-folder ./x64/Release/.conan -s arch=x86_64 -s build_type=Release -s compiler.toolset=v141 -s compiler.version=15 -s compiler.runtime=MD  --build=missing --update
        shell: bash
        
      - name: Build Binary
        run: |
          bash -c "'C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/MSBuild/15.0/Bin/MSBuild.exe' -p:Configuration=Release;Platform=x64"
          mkdir Build
          cp ./x64/Release/FallingSandSurvival.exe ./Build/FallingSandSurvival.exe
          cp ./FallingSandSurvival/lib/bin/x64/fmodL.dll ./Build/fmodL.dll
          cp ./FallingSandSurvival/lib/bin/x64/fmodstudioL.dll ./Build/fmodstudioL.dll
          cp -r ./FallingSandSurvival/assets ./Build/assets
          cp -r ./FallingSandSurvival/data ./Build/data
          cp -r ./FallingSandSurvival/gamedir ./Build/gamedir
        shell: bash
        
      - name: Collect Artifact
        run: Compress-Archive -Path '.\Build' -DestinationPath '.\FallingSandSurvival_x64.zip'
        shell: powershell
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.0
        with:
          name: FallingSandSurvival_x64
          path: ./FallingSandSurvival_x64.zip
        
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@latest
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          body: |
#            Automated Release by GitHub Action CI
#          draft: true
#          prerelease: true      
#          
#      - name: Upload Release Asset (x64)
#        id: upload-release-asset-x64
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./FallingSandSurvival_x64.ZIP
#          asset_name: FallingSandSurvival_x64.ZIP
#          asset_content_type: application/zip
#
